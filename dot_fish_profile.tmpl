{{- if eq .chezmoi.os "android" }}
## TERMUX## TERMUX
# cd codePath #  
function cd-code
    set codePath ~/code;cd $codePath
end
function chezmoi-cd
    cd (chezmoi source-path)
end
function gp
    set text (uname --operating-system), (date)
    git add -A .;git commit -am "$text";git push $argv;
end
function venv
  python -m venv .venv $argv;
  .venv/bin/python -m pip install -U pip setuptools wheel pip-tools yapf autoflake isort coverage $argv;
  printf "#!/usr/bin/env bash \nsource .venv/bin/activate" > .envrc;direnv allow
end
#function envrc
#  printf "#!/usr/bin/env bash \nsource .venv/bin/activate" > .envrc;direnv allow
#end
## END TERMUX
#############
{{- end }}
{{- if eq .chezmoi.os "linux" }}
	{{- if eq .chezmoi.osRelease.id "garuda" }}
  ## KDE-GARUDA
#GOROOT环境变量设置
## set -gx PATH ~/.local/bin $PATH
## set -Ux FOO bar
set -gx PATH /usr/local/go/bin $PATH
# GOPATH工作目录）
set -Ux GOPATH $HOME/go
set -Ux GOBIN $GOPATH/bin
# Go Modules 功能
set -Ux GO111MODULE on
# GOPROXY 环境变量
set -Ux GOPROXY https://goproxy.cn
# goproxy.cn 方便国内用户更快的访问
set -gx PATH $HOME/.local/bin $PATH
set -gx PATH ~/.npm-global/bin $PATH

function chezmoi-cd
	cd (chezmoi source-path)
end

function gp
    set text (uname --operating-system), (date)
    git add -A .;git commit -am "$text";git push $argv;
end

function venv
  python -m venv .venv $argv;
  .venv/bin/python -m pip install -U pip setuptools wheel pip-tools yapf autoflake isort coverage $argv;
  printf "#!/usr/bin/env bash \nsource .venv/bin/activate" > .envrc;direnv allow
end

#
#function envrc
#  printf "#!/usr/bin/env bash \nsource .venv/bin/activate" > .envrc;direnv allow
#end

function ff --description 'Как **, но возвращает только обычные файлы.'
    # Это также игнорирует каталоги .git.
    find . \( -name .git -type d -prune \) -o -type f | \
        sed -n -e '/^\.\/\.git$/n' -e 's/^\.\///p'
end

set MYVIMRC ~/.vimrc
	{{- end }}
{{- end }}

